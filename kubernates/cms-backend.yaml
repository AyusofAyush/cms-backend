apiVersion: v1
kind: ConfigMap
metadata:
  name: cms-backend
data:
  PORT: "8000"
  REDIS_HOST: "redis"
  MONGO_PORT: "27017"
  MONGO_HOST: "192.168.65.2"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cms-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cms-backend
  template:
    metadata:
      labels:
        app: cms-backend
    spec:
      containers:
      - name: cms-backend
        image: cms-backend:latest
        imagePullPolicy: Never
        resources:
          limits:
            cpu: 0.3
            memory: 300Mi
          requests:
            cpu: 0.2
            memory: 200Mi
        envFrom:
        - configMapRef:
            name: cms-backend
        ports:
        - containerPort: 8000
        - containerPort: 27017

---
# apiVersion: v1
# kind: Service
# metadata:
#   name: cms-backend
# spec:
#   type: LoadBalancer
#   ports:
#   - name: "8000"
#     port: 8000
#     targetPort: 8000
#   - name: "27017"
#     port: 27017
#     targetPort: 27017
#   externalIPs:
#   - 192.168.132.253
#   selector:
#     app: cms-backend


# apiVersion: v1
# kind: Service
# metadata:
#   name: cms-backend
# spec:
#   externalIPs:
#   - 192.168.132.253
#   externalTrafficPolicy: Cluster
#   ports:
#   - name: "8000"
#     nodePort: 32017
#     port: 8000
#     protocol: TCP
#     targetPort: 8000
#   - name: "27017"
#     port: 27017
#     targetPort: 27017
#   selector:
#     app: cms-backend
#   sessionAffinity: None
#   type: LoadBalancer
# status:
#   loadBalancer:
#     ingress:
#     - ip: 192.168.132.253
  
apiVersion: v1
kind: Service
metadata:
  name: cms-backend
spec:
  type: LoadBalancer
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  externalTrafficPolicy: Local
  selector:
    app: cms-backend

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        command: ["redis-server"]
        imagePullPolicy: Never
        resources:
          limits:
            cpu: 0.2
            memory: 200Mi
          requests:
            cpu: 0.1
            memory: 100Mi
        ports:
        - containerPort: 6379

---

apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis